webpackJsonp([0x60f2718e8edb],{302:function(e,t){e.exports={data:{markdownRemark:{html:'<h1 id="platform-overview"><a href="#platform-overview" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Platform overview</h1>\n<blockquote>\n<p><code class="language-text">coinfu.io</code> is a no code platform to build, backtest, and run automated cryptocurrency based trading strategies.</p>\n</blockquote>\n<p>Let\'s start with Our platform\'s two main components: <code class="language-text">Bots</code> &#x26; <code class="language-text">Strategies</code>.</p>\n<h2 id="bots"><a href="#bots" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Bots</h2>\n<p>Think of bots as task runners. They are the entities which run your strategy. They have configurable properties like which market to run on, on what exchange, etc.</p>\n<p>Actions dictated by the strategy and taken by the bot are recorded or updated as <code class="language-text">positions</code>. Positions are composed of market orders called <code class="language-text">entries</code>.</p>\n<p>Bots can perform different actions depending on how many entries it has in the market. There are three actions available on a position: <code class="language-text">enter</code> (go short or long), <code class="language-text">add unit</code> (pyramid into a position), and <code class="language-text">exit</code> (either via strategy or via stop loss).</p>\n<table>\n<thead>\n<tr>\n<th>Number of entries</th>\n<th>Available actions</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>N = 0</td>\n<td><code class="language-text">enter</code></td>\n</tr>\n<tr>\n<td>0 &#x3C; N &#x3C; max</td>\n<td><code class="language-text">add unit</code>\n or \n<code class="language-text">exit</code></td>\n</tr>\n<tr>\n<td>N = max</td>\n<td><code class="language-text">exit</code></td>\n</tr>\n</tbody>\n</table>\n<p>When a bot is running, actions are executed on an interval basis every X minute(s) depending on it\'s type:</p>\n<table>\n<thead>\n<tr>\n<th>Action type</th>\n<th>Default interval</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code class="language-text">enter</code></td>\n<td>Run every 30 minutes</td>\n</tr>\n<tr>\n<td><code class="language-text">add unit</code></td>\n<td>Run every 30 minutes</td>\n</tr>\n<tr>\n<td><code class="language-text">exit</code></td>\n<td>Run every minute</td>\n</tr>\n</tbody>\n</table>\n<p>Lastly, a bot has 3 different modes:</p>\n<table>\n<thead>\n<tr>\n<th>Mode</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code class="language-text">inactive</code></td>\n<td>As the name suggests, the bot is not running. It does not perform any actions. This is usually used in developing strategies and on running backtests.</td>\n</tr>\n<tr>\n<td><code class="language-text">signals</code></td>\n<td>The bot is running and actions are performed \n<em>but it does not execute orders on the exchange</em>\n. This is usually used to provide signals to the trader which he/she can then decide to execute the manually.</td>\n</tr>\n<tr>\n<td><code class="language-text">live</code></td>\n<td>The bot is running, actions are performed, buy and sell orders are executed on the exchange.</td>\n</tr>\n</tbody>\n</table>\n<h2 id="strategies"><a href="#strategies" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Strategies</h2>\n<p>Strategies contain the core logic of how you interact with the markets. These are broken down into three segments: <code class="language-text">enter strategy</code>, <code class="language-text">exit strategy</code>, and <code class="language-text">money management</code>.</p>\n<ul>\n<li>Enter strategies are performed </li>\n</ul>\n<p>Crafting strategies are done using the following components: <code class="language-text">events</code>, <code class="language-text">gateways</code>, and <code class="language-text">activity</code>.</p>'}},pathContext:{relativePath:"GDK>../docs/getting-started/platform-overview.md"}}}});
//# sourceMappingURL=path---getting-started-platform-overview-25d6b1fb785a9da33f5d.js.map